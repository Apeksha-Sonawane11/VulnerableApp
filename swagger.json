{
  "openapi": "3.0.3",
  "info": {
    "title": "Vulnerable Web Application API",
    "description": "This is the API documentation for the Vulnerable Web Application training project.\n\n**Security Note**: This application contains intentional security vulnerabilities for training purposes. Do not use in production.\n\nBase URL: http://localhost:8080\n\n## Authentication\nMost endpoints require JWT authentication via the Authorization header:\n```\nAuthorization: Bearer <token>\n```\n\nObtain tokens via the `/api/v1/auth` endpoint.",
    "version": "1.0.0",
    "contact": {
      "name": "Security Training Team",
      "email": "security@example.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local development server"
    },
    {
      "url": "https://vulnerable-app.example.com",
      "description": "Training environment"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/v1/auth": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Authenticate user and get JWT token",
        "description": "Authenticate with username/password and receive a JWT token.\n\n**Security Issues**: \n- Weak JWT implementation\n- No rate limiting\n- Vulnerable to brute force attacks",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": ["username", "password"],
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "admin"
                  },
                  "password": {
                    "type": "string",
                    "example": "admin123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "JWT access token",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users",
        "description": "Retrieve a list of all users in the system.\n\n**Security Issues**:\n- No authentication required\n- Exposes sensitive data (passwords, API keys)\n- No pagination or rate limiting",
        "security": [],
        "responses": {
          "200": {
            "description": "List of users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user by ID",
        "description": "Retrieve a specific user by their ID.\n\n**Security Issues**:\n- IDOR vulnerability (can access any user's data)\n- No proper authorization checks\n- Exposes sensitive information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update user",
        "description": "Update user information.\n\n**Security Issues**:\n- No authorization checks (can modify any user)\n- Privilege escalation possible via role changes\n- IDOR vulnerability",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            },
            "description": "User ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User updated"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete user",
        "description": "Delete a user from the system.\n\n**Security Issues**:\n- No authorization checks\n- Can delete any user including admins\n- No confirmation required",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            },
            "description": "User ID to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User deleted"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/users": {
      "get": {
        "tags": ["Admin"],
        "summary": "Admin - Get all users",
        "description": "Administrative endpoint to retrieve all users.\n\n**Security Issues**:\n- Weak API key authentication\n- Hardcoded API key\n- No proper admin role verification",
        "parameters": [
          {
            "name": "X-API-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "example": "admin-secret-key"
            },
            "description": "API key for admin access"
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserAdmin"
                  }
                }
              }
            }
          },
          "401": {
            "description": "API key required"
          },
          "403": {
            "description": "Access denied"
          }
        }
      }
    },
    "/api/v1/data": {
      "get": {
        "tags": ["Data"],
        "summary": "Get all application data",
        "description": "Retrieve comprehensive application data including users and comments.\n\n**Security Issues**:\n- Excessive data exposure\n- No rate limiting\n- Exposes passwords and sensitive information\n- No authentication required",
        "security": [],
        "responses": {
          "200": {
            "description": "Application data retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "user_id": {"type": "string"},
                      "username": {"type": "string"},
                      "email": {"type": "string"},
                      "password": {
                        "type": "string",
                        "description": "SECURITY ISSUE: Password exposed in plain text"
                      },
                      "role": {"type": "string"},
                      "api_key": {
                        "type": "string",
                        "description": "SECURITY ISSUE: API key exposed"
                      },
                      "content": {"type": "string"},
                      "date": {"type": "string"}
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token obtained from /api/v1/auth endpoint"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "admin"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "admin@example.com"
          },
          "password": {
            "type": "string",
            "description": "SECURITY ISSUE: Password should not be exposed in API",
            "example": "admin123"
          },
          "role": {
            "type": "string",
            "enum": ["admin", "user", "guest"],
            "example": "admin"
          },
          "api_key": {
            "type": "string",
            "description": "SECURITY ISSUE: API key should not be exposed",
            "example": "admin-secret-key"
          }
        }
      },
      "UserAdmin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "admin"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "admin@example.com"
          },
          "role": {
            "type": "string",
            "enum": ["admin", "user", "guest"],
            "example": "admin"
          }
        }
      },
      "UserUpdate": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "maxLength": 50,
            "example": "newusername"
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 100,
            "example": "newemail@example.com"
          },
          "role": {
            "type": "string",
            "enum": ["admin", "user", "guest"],
            "example": "user"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message",
            "example": "Invalid credentials"
          },
          "code": {
            "type": "string",
            "description": "Error code",
            "example": "INVALID_CREDENTIALS"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication operations"
    },
    {
      "name": "Users",
      "description": "User management operations (with security vulnerabilities)"
    },
    {
      "name": "Admin",
      "description": "Administrative operations (with weak access controls)"
    },
    {
      "name": "Data",
      "description": "Data access operations (with excessive exposure)"
    }
  ]
}